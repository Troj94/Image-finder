{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/SearchForm/SearchForm.module.css","services/fetchImages.jsx","components/SearchForm/SearchForm.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","getImages","q","page","API","axios","get","then","res","data","hits","propTypes","PropTypes","string","number","SearchForm","onSubmit","useState","searchQuery","setSearchQuery","className","css","Searchbar","event","preventDefault","trim","Notify","warning","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","name","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","alt","largeImage","ImageGalleryItemImage","src","largeimage","ImageGallery","images","query","onClick","map","webformatURL","largeImageURL","id","Button","Spinner","color","height","width","modalRoot","document","querySelector","Modal","onClose","closeEscape","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","button","close","App","setImages","loaderIsActive","setLoaderIsActive","modalIsActive","setModalIsActive","setLargeImage","setPage","length","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","failure","catch","finally","fetchImages","showButtonLoadMore","target","attributes","nodeName","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c367b6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__5s-Gp\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__Z6-MJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__YFmCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__30alr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchForm_Searchbar__3rHMB\",\"SearchForm\":\"SearchForm_SearchForm__209Fv\",\"SearchFormButton\":\"SearchForm_SearchFormButton__3pWQB\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__11i65\",\"SearchFormInput\":\"SearchForm_SearchFormInput__3ri0H\"};","import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '22595056-b708caf0e2fadc435a6a49bec';\r\n\r\nexport function getImages({ q, page = 1 }) {\r\n  const API = `${API_URL}?q=${q}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return axios.get(API).then(res => res.data.hits);\r\n}\r\n\r\ngetImages.propTypes = {\r\n  q: PropTypes.string,\r\n  page: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Notify } from 'notiflix';\r\nimport css from 'components/SearchForm/SearchForm.module.css';\r\n\r\nexport function SearchForm({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  function handleSearchQuerySubmit(event) {\r\n    event.preventDefault();\r\n\r\n    searchQuery.trim() === ''\r\n      ? Notify.warning('Search field is empty')\r\n      : onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  }\r\n\r\n  function handleSearchQueryChange(event) {\r\n    setSearchQuery(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <header className={css.Searchbar}>\r\n      <form className={css.SearchForm} onSubmit={handleSearchQuerySubmit}>\r\n        <button className={css.SearchFormButton} type=\"submit\">\r\n          <span className={css.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={css.SearchFormInput}\r\n          name=\"query\"\r\n          value={searchQuery}\r\n          onChange={handleSearchQueryChange}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from 'components/ImageGalleryItem/ImageGalleryItem.module.css';\r\n\r\nexport function ImageGalleryItem({ image, alt, largeImage }) {\r\n  return (\r\n    <li className={css.ImageGalleryItem}>\r\n      <img\r\n        className={css.ImageGalleryItemImage}\r\n        src={image}\r\n        alt={alt}\r\n        largeimage={largeImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport css from 'components/ImageGallery/ImageGallery.module.css';\r\n\r\nexport function ImageGallery({ images, query, onClick }) {\r\n  return (\r\n    <ul className={css.ImageGallery} onClick={onClick}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from 'components/Button/Button.module.css';\r\n\r\nexport function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={css.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport function Spinner() {\r\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={38} width={70} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport css from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport function Modal({ onClose, largeImage, alt }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', closeEscape);\r\n    return () => {\r\n      window.removeEventListener('keydown', closeEscape);\r\n    };\r\n  });\r\n\r\n  function closeEscape(event) {\r\n    if (event.code === 'Escape') {\r\n      onClose(event);\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className={css.Overlay} onClick={onClose}>\r\n      <button className={css.button} onClick={onClose} type={'button'}>\r\n        <GrClose className={css.close} onClick={onClose} />\r\n      </button>\r\n      <div className={css.Modal}>\r\n        <img src={largeImage} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Notify } from 'notiflix';\r\n\r\nimport { getImages } from 'services/fetchImages';\r\n\r\nimport { SearchForm } from 'components/SearchForm/SearchForm';\r\nimport { ImageGallery } from 'components/ImageGallery/ImageGallery';\r\nimport { Button } from 'components/Button/Button';\r\nimport { Spinner } from 'components/Loader/Loader';\r\nimport { Modal } from 'components/Modal/Modal';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [loaderIsActive, setLoaderIsActive] = useState(false);\r\n  const [modalIsActive, setModalIsActive] = useState(false);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    function fetchImages() {\r\n      const q = searchQuery;\r\n\r\n      if (q.trim() === '') {\r\n        return;\r\n      }\r\n\r\n      setLoaderIsActive(true);\r\n\r\n      getImages({ q, page })\r\n        .then(images => {\r\n          if (images.length > 0) {\r\n            setImages(prevImages => [...prevImages, ...images]);\r\n            scrollTo();\r\n          }\r\n          if (images.length === 0) {\r\n            Notify.failure(\"Can't find images for your query\");\r\n          }\r\n        })\r\n        .catch(() => Notify.failure('Something wrong'))\r\n        .finally(() => setLoaderIsActive(false));\r\n    }\r\n\r\n    fetchImages();\r\n  }, [searchQuery, page]);\r\n\r\n  const nextPage = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  function updateQuery(query) {\r\n    if (searchQuery === query) {\r\n      Notify.warning('Images for your request have already been found');\r\n      return;\r\n    } else {\r\n      setSearchQuery(query);\r\n      setPage(1);\r\n      setImages([]);\r\n    }\r\n  }\r\n\r\n  function scrollTo() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  function openModal(event) {\r\n    const { largeImage } = event.target.attributes;\r\n\r\n    if (event.target.nodeName === 'IMG') {\r\n      setModalIsActive(true);\r\n      setLargeImage(largeImage.value);\r\n    }\r\n  }\r\n\r\n  function closeModal(event) {\r\n    if (event.target === event.currentTarget || event.code === 'Escape') {\r\n      setModalIsActive(false);\r\n      setLargeImage('');\r\n    }\r\n  }\r\n\r\n  const showButtonLoadMore = images.length > 0 && !loaderIsActive;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchForm onSubmit={updateQuery} />\r\n      <ImageGallery images={images} query={searchQuery} onClick={openModal} />\r\n      {loaderIsActive && <Spinner />}\r\n      {showButtonLoadMore && <Button onClick={nextPage} />}\r\n      {modalIsActive && (\r\n        <Modal largeImage={largeImage} alt={searchQuery} onClose={closeModal} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__5WCSS\",\"Modal\":\"Modal_Modal__2I2ET\",\"button\":\"Modal_button__3kSCG\",\"close\":\"Modal_close__og3wH\"};"],"sourceRoot":""}