{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/fetchImages.jsx","components/SearchForm/SearchForm.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","getImages","q","page","axios","get","params","then","res","data","hits","defaults","key","image_type","orientation","per_page","propTypes","PropTypes","string","number","SearchForm","state","searchQuery","handleSearchQuerySubmit","event","preventDefault","trim","Notify","warning","props","onSubmit","setState","handleSearchQueryChange","currentTarget","value","className","css","Searchbar","this","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","alt","largeImage","ImageGalleryItemImage","src","largeimage","ImageGallery","images","query","onClick","map","webformatURL","largeImageURL","id","Button","Spinner","color","height","width","modalRoot","document","querySelector","Modal","closeEscape","code","onClose","window","addEventListener","removeEventListener","createPortal","Overlay","button","close","App","loaderIsActive","modalIsActive","fetchImages","prevState","length","failure","catch","finally","updateQuery","scrollTo","top","documentElement","scrollHeight","behavior","openModal","target","attributes","nodeName","closeModal","prevProps","showButtonLoadMore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8483f9ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__8PWz6\",\"Modal\":\"Modal_Modal__3BvfG\",\"button\":\"Modal_button__3KUVk\",\"close\":\"Modal_close__PpqfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__27tbW\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__FGgF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1iG4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3IU52\"};","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\naxios.defaults.params = {\n  key: '22595056-b708caf0e2fadc435a6a49bec',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\n\nexport function getImages({ q, page = 1 }) {\n  return axios\n    .get('https://pixabay.com/api/', { params: { q, page } })\n    .then(res => res.data.hits);\n}\n\ngetImages.propTypes = {\n  q: PropTypes.string,\n  page: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { Notify } from 'notiflix';\nimport css from 'components/SearchForm/SearchForm.module.css';\n\nexport class SearchForm extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleSearchQuerySubmit = event => {\n    event.preventDefault();\n\n    this.state.searchQuery.trim() === ''\n      ? Notify.warning('Search field is empty')\n      : this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  handleSearchQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <header className={css.Searchbar}>\n        <form\n          className={css.SearchForm}\n          onSubmit={this.handleSearchQuerySubmit}\n        >\n          <button className={css.SearchFormButton} type=\"submit\">\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            className={css.SearchFormInput}\n            name=\"query\"\n            value={this.state.searchQuery}\n            onChange={this.handleSearchQueryChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport css from 'components/ImageGalleryItem/ImageGalleryItem.module.css';\n\nexport function ImageGalleryItem({ image, alt, largeImage }) {\n  return (\n    <li className={css.ImageGalleryItem}>\n      <img\n        className={css.ImageGalleryItemImage}\n        src={image}\n        alt={alt}\n        largeimage={largeImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImage: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport css from 'components/ImageGallery/ImageGallery.module.css';\n\nexport function ImageGallery({ images, query, onClick }) {\n  return (\n    <ul className={css.ImageGallery} onClick={onClick}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          image={image.webformatURL}\n          alt={query}\n          largeImage={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  query: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from 'components/Button/Button.module.css';\n\nexport function Button({ onClick }) {\n  return (\n    <button type=\"button\" className={css.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nexport function Spinner() {\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={38} width={70} />;\n}\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { GrClose } from 'react-icons/gr';\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeEscape);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeEscape);\n  }\n\n  closeEscape = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose(event);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={css.Overlay} onClick={this.props.onClose}>\n        <button\n          className={css.button}\n          onClick={this.props.onClose}\n          type={'button'}\n        >\n          <GrClose className={css.close} onClick={this.props.onClose} />\n        </button>\n        <div className={css.Modal}>\n          <img src={this.props.largeImage} alt={this.props.alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport { Notify } from 'notiflix';\n\nimport { getImages } from 'services/fetchImages';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { ImageGallery } from 'components/ImageGallery/ImageGallery';\nimport { Button } from 'components/Button/Button';\nimport { Spinner } from 'components/Loader/Loader';\nimport { Modal } from 'components/Modal/Modal';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    images: [],\n    loaderIsActive: false,\n    modalIsActive: false,\n    largeImage: '',\n    page: 1,\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    const q = searchQuery;\n    const params = { q, page };\n\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      loaderIsActive: true,\n    }));\n\n    getImages(params)\n      .then(images => {\n        if (images.length > 0) {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images],\n          }));\n        } else {\n          Notify.failure(\"Can't find images for your querry\");\n        }\n      })\n      .catch(() => Notify.failure('Something has gone wrong'))\n      .finally(() => this.setState({ loaderIsActive: false }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n    if (this.state.page > 2) {\n      this.scrollTo();\n    }\n  }\n\n  updateQuery = query => {\n    if (this.state.searchQuery === query) {\n      Notify.warning('Images for your request have already been found');\n      return;\n    } else {\n      this.setState({\n        searchQuery: query,\n        page: 1,\n        images: [],\n      });\n    }\n  };\n\n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  openModal = event => {\n    const { largeImage } = event.target.attributes;\n\n    if (event.target.nodeName === 'IMG') {\n      this.setState({\n        modalIsActive: true,\n        largeImage: largeImage.value,\n      });\n    }\n  };\n\n  closeModal = event => {\n    if (event.target === event.currentTarget || event.code === 'Escape') {\n      this.setState({\n        modalIsActive: false,\n        largeImage: '',\n      });\n    }\n  };\n\n  render() {\n    const { searchQuery, images, loaderIsActive, modalIsActive, largeImage } =\n      this.state;\n    const showButtonLoadMore = images.length > 0 && !loaderIsActive;\n\n    return (\n      <div className=\"App\">\n        <SearchForm onSubmit={this.updateQuery} />\n        <ImageGallery\n          images={this.state.images}\n          query={this.state.searchQuery}\n          onClick={this.openModal}\n        />\n        {loaderIsActive && <Spinner />}\n        {showButtonLoadMore && <Button onClick={this.fetchImages} />}\n        {modalIsActive && (\n          <Modal\n            largeImage={largeImage}\n            alt={searchQuery}\n            onClose={this.closeModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchForm_Searchbar__3CG_Z\",\"SearchForm\":\"SearchForm_SearchForm__rHNTe\",\"SearchFormButton\":\"SearchForm_SearchFormButton__2T59K\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__371vG\",\"SearchFormInput\":\"SearchForm_SearchFormInput__oL6I-\"};"],"sourceRoot":""}